@using Huachin.MusicStore.UI.Components.Layout
@using Huachin.MusicStore.UI.ConfigRutas
@using Huachin.MusicStore.UI.Servicios
@using Microsoft.AspNetCore.Components.Authorization
@inject NavigationManager Navegador

@* <Router AppAssembly="typeof(Program).Assembly"> *@
@*     <Found Context="routeData"> *@
@*         <RouteView RouteData="routeData" DefaultLayout="typeof(Layout.MainLayout)" /> *@
@*         <FocusOnNavigate RouteData="routeData" Selector="h1" /> *@
@*     </Found> *@
@* </Router> *@

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            @if (routeData.PageType == typeof(Login.Login))
            {
                <RouteView RouteData="@routeData" DefaultLayout="null"></RouteView>
            }
            else
            {
                <AuthorizeRouteView RouteData="@routeData" DefaultLayout="typeof(MainLayout)">
                    <NotAuthorized>
                        @if (!context.User.Identity!.IsAuthenticated)
                        {
                            Navegador.NavigateTo(Rutas.Login);
                        }
                        else
                        {
                            <h2>No tienes acceso a esta pagina</h2>
                        }
                    </NotAuthorized>
                </AuthorizeRouteView>
            }
        </Found>
        <NotFound>
            <LayoutView Layout="@typeof(MainLayout)">
                <p>Pagina no encontrada.</p>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code {
    [Inject] private AutenticacionService AuthService { get; set; } = default!;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await AuthService.InitializeAsync();
            StateHasChanged();
        }
    }
}

